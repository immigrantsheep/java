'use strict';

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var request = require('request');

var API_HOST = 'http://api.penncoursereview.com/v1/';

var PCR = (function () {
  function PCR(token) {
    _classCallCheck(this, PCR);

    if (!token) {
      token = 'public';
    }
    this.token = token;
  }

  _createClass(PCR, [{
    key: 'api',
    value: function api(endpoint, params, cb) {
      // Optional params argument
      if (typeof params === 'function') {
        cb = params;
        params = {};
      }
      params.token = this.token;

      request({
        url: '' + API_HOST + endpoint,
        method: "GET",
        qs: params
      }, function (err, body, response) {
        var json = JSON.parse(response);
        cb(err, json);
      });
      return;
    }
  }, {
    key: 'course',
    value: function course(id_or_url, cb) {
      this.api('courses/' + id_or_url, cb);
    }
  }, {
    key: 'department',
    value: function department(department_id, cb) {
      this.api('depts/' + department_id, cb);
    }
  }, {
    key: 'departments',
    value: function departments(cb) {
      this.api('depts', cb);
    }
  }, {
    key: 'instructor',
    value: function instructor(id, cb) {
      this.api('instructors/' + id, cb);
    }
  }, {
    key: 'instructors',
    value: function instructors(cb) {
      this.api('instructors', cb);
    }
  }, {
    key: 'semesters',
    value: function semesters(cb) {
      this.api('semesters', cb);
    }
  }, {
    key: 'section',
    value: function section(course_id, section_id, cb) {
      this.api('courses/' + course_id + '/sections/' + section_id, cb);
    }
  }, {
    key: 'review',
    value: function review(course_id, section_id, instructor_id, cb) {
      this.api('courses/' + course_id + '/sections/' + section_id + '/reviews/' + instructor_id, cb);
    }
  }, {
    key: 'courseHistory',
    value: function courseHistory(courseHistory_id, cb) {
      this.api('coursehistories/' + courseHistory_id, cb);
    }
  }, {
    key: 'courseHistoryReviews',
    value: function courseHistoryReviews(courseHistory_id, cb) {
      this.api('coursehistories/' + courseHistory_id + '/reviews', cb);
    }
  }, {
    key: 'averageReview',
    value: function averageReview(course_id, cb) {
      request({
        url: 'http://api.pennlabs.org/pcr/' + course_id,
        method: "GET"
      }, function (err, body, response) {
        var json = JSON.parse(response);
        cb(err, json);
      });
      return;
    }
  }]);

  return PCR;
})();

module.exports = PCR;